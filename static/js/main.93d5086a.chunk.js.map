{"version":3,"sources":["store/reducers/market.reducer.js","store/store.js","services/database.service.js","services/btc.service.js","services/kraken.service.js","store/actions/market.actions.js","cmps/market-cmps/MarketInfo.jsx","cmps/market-cmps/MarketList.jsx","pages/AppBoard.jsx","routes.js","pages/WatchList.jsx","cmps/market-cmps/MarketSearch.jsx","cmps/AppHeader.jsx","App.jsx","index.js"],"names":["initialState","markets","watchlist","Set","filterBy","rootReducer","combineReducers","marketModule","state","action","newState","type","market","has","asset","delete","add","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","gDatabase","require","a","databaseService","query","btcMarkets","btcService","getBtcMarket","krakenMarkets","krakenService","getKrakenMarket","setFilter","dispatch","err","console","log","MarketInfo","useSelector","useDispatch","onToggleMarket","toggleMarket","isWatched","useMemo","className","Object","keys","map","key","onClick","Star","style","color","MarketList","memo","marketList","AppBoard","match","useEffect","params","loadMarkets","marketsToShow","regex","RegExp","reduce","acc","category","filter","test","length","src","toLowerCase","alt","routes","path","component","list","arr","item","push","idx","MarketSearch","Input","textTransform","fontFamily","background","padding","onChange","value","target","placeholder","autoComplete","IconButton","borderRadius","Clear","AppHeader","name","route","to","Button","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d5086a.chunk.js","sourcesContent":["const initialState = {\r\n    markets: [],\r\n    watchlist: new Set(),\r\n    filterBy: ''\r\n}\r\nexport function marketReducer(state = initialState, action) {\r\n    var newState = state;\r\n    var watchlist;\r\n    switch (action.type) {\r\n        case 'FILTER_MARKET':\r\n            newState = { ...state, market: action.market }\r\n            break;\r\n        case 'SET_MARKETS':\r\n            newState = { ...state, markets: action.markets }\r\n            break;\r\n        case 'SET_FILTER':\r\n            newState = { ...state, filterBy: action.filterBy }\r\n            break;\r\n        case 'SET_WATCHLIST':\r\n            watchlist = new Set(state.watchlist)\r\n            watchlist.has(action.asset) ? watchlist.delete(action.asset) : watchlist.add(action.asset)\r\n            newState = { ...state, watchlist }\r\n            break;\r\n        default:\r\n    }\r\n    return newState;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { marketReducer } from './reducers/market.reducer.js'\r\n\r\nconst rootReducer = combineReducers({\r\n    marketModule : marketReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n\r\n","const gDatabase = require('../data/data.json');\r\n\r\nasync function query() {\r\n    return gDatabase\r\n}\r\n\r\nexport const databaseService = {\r\n    query\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getBtcMarket() {\r\n    let { btcMarkets } = await databaseService.query();\r\n    return btcMarkets;\r\n}\r\n\r\nexport const btcService = {\r\n    getBtcMarket\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getKrakenMarket() {\r\n    const { krakenMarkets } = await databaseService.query();\r\n    return krakenMarkets;\r\n}\r\n\r\n\r\nexport const krakenService = {\r\n    getKrakenMarket\r\n}\r\n","import { btcService } from \"../../services/btc.service\";\r\nimport { krakenService } from \"../../services/kraken.service\";\r\n\r\nexport function loadMarkets(market) {\r\n    return async dispatch => {\r\n        try {\r\n            let markets;\r\n            if (market === 'btc') {\r\n                markets = await btcService.getBtcMarket();\r\n            }\r\n            else if (market === 'kraken') {\r\n                markets = await krakenService.getKrakenMarket();\r\n            }\r\n            dispatch({ type: 'SET_MARKETS', markets })\r\n        } catch (err) {\r\n            console.log('marketActions: err in loadMarkets', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleMarket({ asset }) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_WATCHLIST', asset })\r\n        } catch (err) {\r\n            console.log('marketActions: err in toggleMarket', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_FILTER', filterBy })\r\n        } catch (err) {\r\n            console.log('marketActions: err in setFilter', err)\r\n        }\r\n    }\r\n}","import { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Star } from \"@material-ui/icons\"\r\nimport { toggleMarket } from \"../../store/actions/market.actions\"\r\n\r\nexport const MarketInfo = ({ market }) => {\r\n    const { watchlist } = useSelector(state => state.marketModule)\r\n    const dispatch = useDispatch()\r\n\r\n    const onToggleMarket = (market) => {\r\n        dispatch(toggleMarket(market))\r\n    }\r\n\r\n    const isWatched = useMemo(() => {\r\n        return watchlist.has(market.asset);\r\n    }, [watchlist])\r\n\r\n    return (\r\n        <section className={`market-info flex align-center space-between ${isWatched ? 'watched' : ''}`}>\r\n            {Object.keys(market).map(key =>\r\n                <div key={key} className={`market-${key} flex align-center gap \r\n                ${key === 'change' ?\r\n                        market[key] >= 0 ? 'green' : 'red'\r\n                        : ''}`}>\r\n                    <span>{market[key]}</span>\r\n                    {key === 'volume' &&\r\n                        <span className=\"market-star\"\r\n                            onClick={() => onToggleMarket(market)}>\r\n                            {isWatched ? <Star style={{ color: \"#e5952b\" }} /> : <Star style={{ color: \"#373737\" }} />}\r\n                        </span>}\r\n                </div>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { memo } from 'react';\r\nimport { MarketInfo } from './MarketInfo';\r\n\r\nexport const MarketList = memo(({ marketList }) => {\r\n    return (\r\n        <section className=\"market-list flex column\">\r\n            {marketList.map(market => <MarketInfo\r\n                key={market.asset}\r\n                market={market} />)\r\n            }\r\n        </section>\r\n    )\r\n})","import { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    loadMarkets,\r\n} from '../store/actions/market.actions';\r\nimport { MarketList } from '../cmps/market-cmps/MarketList';\r\n\r\nexport const AppBoard = ({ match }) => {\r\n    const { markets, filterBy } = useSelector(state => state.marketModule)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const { market } = match.params;\r\n        if (market) {\r\n            dispatch(loadMarkets(market));\r\n        }\r\n    }, [match])\r\n\r\n    const marketsToShow = useMemo(() => {\r\n        if (filterBy) {\r\n            const regex = new RegExp(filterBy, 'i');\r\n            const filteredMarkets = Object.keys(markets).reduce((acc, category) => {\r\n                acc[category] = markets[category].filter(market => regex.test(market.asset))\r\n                return acc;\r\n            }, {})\r\n            return filteredMarkets;\r\n        } else {\r\n            return markets;\r\n        }\r\n    }, [markets, filterBy])\r\n\r\n    const BASE_URL = 'https://cdn.jsdelivr.net/gh/atomiclabs/cryptocurrency-icons@d5c68edec1f5eaec59ac77ff2b48144679cebca1/32/white/'\r\n\r\n    return (\r\n        <section className=\"app-board flex column gap\">\r\n            {Object.keys(marketsToShow).length\r\n                ? Object.keys(marketsToShow).map(category =>\r\n                    <div key={category} className=\"market-category flex column\">\r\n                        <div className=\"market-category-title flex align-center gap\">\r\n                            <img src={`${BASE_URL + category.toLowerCase()}.png`} alt={`${category} icon`} />\r\n                            <h2>{category}</h2>\r\n                        </div>\r\n                        <MarketList marketList={marketsToShow[category]} />\r\n                    </div>\r\n                ) : <h1>Choose a market!</h1>}\r\n        </section>\r\n    )\r\n}","import { AppBoard } from './pages/AppBoard';\r\nimport { WatchList } from './pages/WatchList';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: AppBoard\r\n    },\r\n    {\r\n        path: '/market/:market',\r\n        component: AppBoard\r\n    },\r\n    {\r\n        path: '/watchlist',\r\n        component: WatchList\r\n    }\r\n]\r\n\r\nexport default routes;","import { memo, useMemo } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport const WatchList = memo(() => {\r\n    const { watchlist } = useSelector(state => state.marketModule)\r\n\r\n    const list = useMemo(() => {\r\n        const arr = []\r\n        for (let item of watchlist) arr.push(item)\r\n        return arr;\r\n    }, [watchlist])\r\n\r\n    return (\r\n        <section className=\"watch-list flex column \">\r\n            <h1>{list.length ? 'Markets in watchlist: ' : 'No markets found!'}</h1>\r\n            {list.map((asset, idx) => <h2 key={idx}>{asset}</h2>)}\r\n        </section>\r\n    )\r\n})\r\n","import { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconButton, Input } from '@material-ui/core'\r\nimport { Clear } from '@material-ui/icons';\r\nimport { setFilter } from './../../store/actions/market.actions';\r\n\r\nexport const MarketSearch = memo(() => {\r\n    const { filterBy } = useSelector(state => state.marketModule)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSetFilter = ({ target: { value } }) => {\r\n        dispatch(setFilter(value))\r\n    }\r\n\r\n    const onClearFilter = () => {\r\n        if (!filterBy) return;\r\n        dispatch(setFilter(''))\r\n    }\r\n\r\n    return (\r\n        <section className=\"market-search flex align-center gap\">\r\n            <Input\r\n                style={{\r\n                    textTransform: 'unset',\r\n                    fontFamily: 'monospace',\r\n                    color: '#ffffff',\r\n                    background: '#1c2663',\r\n                    padding: '5px 10px'\r\n                }}\r\n                onChange={onSetFilter}\r\n                value={filterBy}\r\n                placeholder=\"Search all markets\"\r\n                autoComplete=\"off\" />\r\n\r\n            <IconButton style={{\r\n                color: '#ffffff',\r\n                background: '#1c2663',\r\n                borderRadius: '0px',\r\n                padding: '8px'\r\n            }}\r\n                aria-label=\"clear search\"\r\n                component=\"span\"\r\n                onClick={onClearFilter}>\r\n                <Clear />\r\n            </IconButton>\r\n        </section>\r\n    )\r\n})","import { memo } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport { MarketSearch } from './market-cmps/MarketSearch';\r\n\r\nexport const AppHeader = memo(() => {\r\n    const routes = [\r\n        {\r\n            path: '/market/btc',\r\n            name: 'BTC markets'\r\n        },\r\n        {\r\n            path: '/market/kraken',\r\n            name: 'Kraken markets'\r\n        },\r\n        {\r\n            path: '/watchlist',\r\n            name: 'Watchlist'\r\n        }\r\n    ]\r\n    return (\r\n        <header className=\"app-header flex column gap\">\r\n\r\n            <nav className=\"flex align-center gap\">\r\n                {routes.map(route =>\r\n                    <NavLink key={route.name} to={route.path}>\r\n                        <Button\r\n                            style={{\r\n                                textTransform: 'unset',\r\n                                fontFamily: 'monospace',\r\n                                color: '#ffffff',\r\n                                background: '#1c2663'\r\n                            }}>\r\n                            {route.name}\r\n                        </Button>\r\n                    </NavLink>\r\n                )}\r\n            </nav>\r\n\r\n            <MarketSearch />\r\n\r\n        </header>\r\n    )\r\n})","import { Switch, Route } from 'react-router'\r\nimport routes from './routes.js'\r\n\r\nimport { AppHeader } from './cmps/AppHeader';\r\n\r\nexport function App() {\r\n  return (\r\n    <section className=\"app flex column\">\r\n      <AppHeader />\r\n      <main className=\"main-layout\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}